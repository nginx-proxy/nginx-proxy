name: Build and publish Docker images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - main
    tags:
      - "*.*.*"
    paths-ignore:
      - "test/*"
      - ".gitignore"
      - "docker-compose-separate-containers.yml"
      - "docker-compose.yml"
      - "LICENSE"
      - "Makefile"
      - "*.md"

jobs:
  multiarch-build-debian:
    name: Build and publish Debian image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve version
        run: echo "GIT_DESCRIBE=$(git describe --tags)" >> $GITHUB_ENV

      - name: Get Docker tags for Debian based image
        id: docker_meta_debian
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/nginx-proxy/nginx-proxy
            nginxproxy/nginx-proxy
            jwilder/nginx-proxy
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ env.GIT_DESCRIBE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve docker-gen version
        run: echo "DOCKER_GEN_VERSION=$(grep -o -E 'nginxproxy/docker-gen:([0-9x\.]+)' Dockerfile | cut -d ':' -f2)" >> $GITHUB_ENV

      - name: Build and push the Debian based image
        id: docker_build_debian
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          build-args: |
            NGINX_PROXY_VERSION=${{ env.GIT_DESCRIBE }}
            DOCKER_GEN_VERSION=${{ env.DOCKER_GEN_VERSION }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_debian.outputs.tags }}
          labels: ${{ steps.docker_meta_debian.outputs.labels }}

      - name: Images digests
        run: echo ${{ steps.docker_build_debian.outputs.digest }}

  multiarch-build-alpine:
    name: Build and publish Alpine image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve version
        run: echo "GIT_DESCRIBE=$(git describe --tags)" >> $GITHUB_ENV

      - name: Get Docker tags for Alpine based image
        id: docker_meta_alpine
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/nginx-proxy/nginx-proxy
            nginxproxy/nginx-proxy
            jwilder/nginx-proxy
          tags: |
            type=semver,suffix=-alpine,pattern={{version}}
            type=semver,suffix=-alpine,pattern={{major}}.{{minor}}
            type=raw,value=alpine,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ env.GIT_DESCRIBE }}
          flavor: latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve docker-gen version
        run: echo "DOCKER_GEN_VERSION=$(grep -o -E 'nginxproxy/docker-gen:([0-9x\.]+)' Dockerfile | cut -d ':' -f2)" >> $GITHUB_ENV

      - name: Build and push the Alpine based image
        id: docker_build_alpine
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.alpine
          build-args: |
            NGINX_PROXY_VERSION=${{ env.GIT_DESCRIBE }}
            DOCKER_GEN_VERSION=${{ env.DOCKER_GEN_VERSION }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_alpine.outputs.tags }}
          labels: ${{ steps.docker_meta_alpine.outputs.labels }}

      - name: Images digests
        run: echo ${{ steps.docker_build_alpine.outputs.digest }}
